---
openapi: 3.0.3
info:
  title: Student DB - OpenAPI 3.0
  description: "Questa è l'API per il database degli studenti. Le funzionalità fondamentali offerte sono quelle di registrazione, login, logout e recupero della password, accessibili attraverso chiamate GET a /register, /login, /logout e /forgot-password. Dopo il login di default si accede all'area personale dell'utente che gli consente di avviare una nuova partita o visualizzare lo storico delle partite giocate. Se si volesse richiamare esplicitamente questa pagina si può effettuare una chiamata GET a /user/{userId}; ovviamente ogni utente può accedere solo alla propria area riservata. Inoltre se si volesse ricavare l'id dell'utente loggato, ad esempio per proteggere l'accesso ai propri metodi, è a disposizione la chiamata a /authenticated-id che restituisce l'id dell'utente autenticato, o -1 se la sessione non è valida. L'autenticazione è gestita attraverso il cookie JSESSIONID; per far sì che tale cookie venga scambiato correttamente sulle diverse applicazioni presenti sul server, i componenti che vogliono utilizzare le nostre funzionalità dovrebbero settare il path del cookie a \"/\" per evitare eventuali problemi. Sono presenti altri metodi pubblici che però vengono utilizzati automaticamente dalle pagine html fornite, per cui non dovrebbero essere invocati esplicitamente (o comunque la loro chiamata non avrebbe particolari effetti sul sistema nella maggior parte dei casi). Sono anche presenti alcune funzionalità, accessibili solo dall'utente admin, che consentono la gestione del database come visualizzare la lista degli studenti registrati o in generale effettuare operazioni CRUD."
  version: "1.0"
servers:
- url: /
tags:
- name: register
  description: Effettua la registrazione
- name: login
  description: Accedi al sistema
- name: logout
  description: Effettua il logout dal sistema
- name: forgot password
  description: Recupera l'account
- name: admin
  description: Operazioni riservate all'admin
paths:
  /register:
    get:
      tags:
      - register
      summary: Ottieni il form di registrazione
      description: Questo metodo consente di ottenere il form html per effettuare la registrazione.
      operationId: getRegisterForm
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
    post:
      tags:
      - register
      summary: Invia i dati per la registrazione
      description: Questo metodo permette di inviare i dati necessari alla registrazione dello studente nel sistema. Se la registrazione va a buon fine viene restituito un file html di conferma.
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
        "422":
          description: Unprocessable entity
          content:
            text/plain:
              schema:
                type: string
                example: I dati inseriti non sono corretti
  /verify:
    get:
      tags:
      - register
      summary: Verifica l'email
      description: Questo metodo viene invocato mediante il link inviato alla mail utilizzata per la registrazione. Viene restituito un html sia in caso di conferma che di errore (codice non valido).
      operationId: verifyUser
      parameters:
      - name: code
        in: query
        description: Codice di verifica
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
        "422":
          description: Unprocessable entity
          content:
            text/html: {}
  /login:
    get:
      tags:
      - login
      summary: Ottieni il form di login
      description: L'invocazione di questo metodo permette di ottenere il form per il login.
      operationId: getLoginForm
      parameters:
      - name: logout
        in: query
        description: Se presente stampa a video il messaggio di logout
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: error
        in: query
        description: Se presente stampa a video il messaggio di credenziali invalide
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
    post:
      tags:
      - login
      summary: Invia i dati per effettuare il login
      description: "Questo metodo consente di inviare al sistema email e password con i quali effettuare l'autenticazione. Dopo la corretta autenticazione di default si viene portati sull'URL \"/login-success\", oppure si ritorna a \"/login?error\" in caso di credenziali invalide."
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginData'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginData'
      responses:
        "302":
          description: Found
  /login-success:
    get:
      tags:
      - login
      summary: Login ha avuto successo
      description: "Questo metodo viene invocato di default dopo una corretta autenticazione. Effettua un redirect a /user/{userId} dove userId è l'identificativo dello studente loggato."
      operationId: loginSuccess
      responses:
        "302":
          description: Found
  /user/{userId}:
    get:
      tags:
      - login
      summary: Accedi all'area personale dello studente
      description: "Questo metodo restituisce la pagina personale dello studente con id specificato, che gli consente di avviare una nuova partita o visualizzare lo storico delle partite."
      operationId: getUserAreaId
      parameters:
      - name: userId
        in: path
        description: Id dello studente
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
        "403":
          description: Forbidden
      security:
      - cookieAuth: []
  /authenticated-id:
    get:
      tags:
      - login
      summary: Ottieni l'id dell'utente autenticato
      description: L'invocazione di questo metodo permette di ottenere l'id dell'utente autenticato in base al cookie di sessione JSESSIONID. Restituisce la stringa "-1" se la sessione non è valida.
      operationId: getAuthenticatedId
      responses:
        "200":
          description: Successful operation
          content:
            string: {}
      security:
      - cookieAuth: []
  /logout:
    get:
      tags:
      - logout
      summary: Esci dal sistema
      description: La chiamata di questo metodo cancella i dati relativi alla sessione dell'utente loggato e reindirizza su "login?logout".
      operationId: logout
      responses:
        "302":
          description: Found
  /forgot-password:
    get:
      tags:
      - forgot password
      summary: Ottieni il form di recupero dell'account
      description: Restituisce il form per inserire l'email dell'account da recuperare.
      operationId: getForgotPasswordForm
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
    post:
      tags:
      - forgot password
      summary: Inserisci email dell'account da recuperare
      description: "Questa chiamata permette di inviare al sistema l'email dell'account che si vuole recuperare (e cioè cambiarne la password). Se l'email inserita è valida viene inviato un link a tale indirizzo che consente di cambiare la password e viene restituito un messaggio di conferma (visualizzato sulla pagina html siccome questo metodo viene invocato automaticamente dopo aver inserito l'email nel form di recupero), oppure se l'email non esiste o non è stata ancora verificata viene restituito un messaggio di errore (sempre visualizzato sulla pagina)."
      operationId: processForgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoverEmail'
          application/xml:
            schema:
              $ref: '#/components/schemas/RecoverEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecoverEmail'
      responses:
        "200":
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Email di conferma inviata
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                example: Impossibile trovare lo studente con email mariorossi@gmail.com
        "422":
          description: Unprocessable entity
          content:
            text/plain:
              schema:
                type: string
                example: Questa email non è stata ancora verificata
  /reset-password:
    get:
      tags:
      - forgot password
      summary: Ottieni form per cambio password
      description: "La chiamata a questo metodo viene effettuata automaticamente cliccando sul link inviato in precedenza via email, il che consente di mandare come parametro il token di conferma. Se il token è valido viene restituito il form html per resettare la password, altrimenti viene visualizzata una pagina di errore."
      operationId: getResetPasswordForm
      parameters:
      - name: token
        in: query
        description: Token di verifica
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            text/html: {}
        "422":
          description: Unprocessable entity
          content:
            text/html: {}
    post:
      tags:
      - forgot password
      summary: Cambia la password
      description: "Questo metodo consente di inserire la nuova password dell'account. In maniera automatica viene anche mandato il token di conferma, per cui come nel caso della chiamata get può generare l'errore \"Invalid token\" nel caso in cui questo non sia corretto. Può restituire un errore anche nel caso in cui la password non rispetti i vincoli imposti. Se invece la procedura avviene con successo viene restituito un messaggio di conferma."
      operationId: processResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordData'
          application/xml:
            schema:
              $ref: '#/components/schemas/ForgotPasswordData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPasswordData'
      responses:
        "200":
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Password cambiata
        "422":
          description: Unprocessable entity
          content:
            text/plain:
              schema:
                type: string
                example: Password non valida
            text/html: {}
  /students:
    get:
      tags:
      - admin
      summary: Ottieni la lista degli studenti registrati
      description: Questo metodo restituisce la lista degli studenti registrati.
      operationId: readAllStudents
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "403":
          description: Forbidden
      security:
      - cookieAuth: []
  /student/{id}:
    get:
      tags:
      - admin
      summary: Ottieni lo studente in base all'id
      description: Questo metodo restituisce lo studente con id specificato.
      operationId: readStudentById
      parameters:
      - name: id
        in: path
        description: Id dello studente
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "403":
          description: Forbidden
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                example: Studente non trovato
      security:
      - cookieAuth: []
    put:
      tags:
      - admin
      summary: Modifica lo studente in base all'id
      description: "Questo metodo permette di modificare l'utente con id specificato, o di crearne uno nuovo nel caso l'id non sia già in uso. Se si tenta di cambiare l'email con un'altra che è già in uso nel sistema viene restituito un'errore."
      operationId: updateStudentById
      parameters:
      - name: id
        in: path
        description: Id dello studente
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        "200":
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Studente aggiornato/creato
        "403":
          description: Forbidden
        "422":
          description: Unprocessable entity
          content:
            text/plain:
              schema:
                type: string
                example: Email già in uso
      security:
      - cookieAuth: []
    delete:
      tags:
      - admin
      summary: Cancella lo studente in base all'id
      description: Questo metodo permette di eliminare lo studente con id specificato. Se non esiste uno studente con tale identificativo la chiamata non ha alcun effetto.
      operationId: deleteStudentById
      parameters:
      - name: id
        in: path
        description: Id dello studente
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Studente cancellato
        "403":
          description: Forbidden
      security:
      - cookieAuth: []
components:
  schemas:
    Student:
      type: object
      properties:
        nome:
          type: string
          example: Mario
        cognome:
          type: string
          example: Rossi
        corso:
          type: string
          enum:
          - Associate
          - Bachelor
          - Graduate
          - Doctorate
        email:
          type: string
          example: mariorossi@gmail.com
        password:
          type: string
          description: "La password deve contenere almeno 8 caratteri, di cui almeno una minuscola, una maiuscola, un numero e un carattere speciale."
          example: Mario123@
    LoginData:
      type: object
      properties:
        email:
          type: string
          example: mariorossi@gmail.com
        password:
          type: string
          example: Mario123@
    ForgotPasswordData:
      type: object
      properties:
        password:
          type: string
          example: Mario123@
        token:
          type: string
          example: VerificationToken
    RecoverEmail:
      type: object
      properties:
        email:
          type: string
          example: mariorossi@gmail.com
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: JSESSIONID
      in: cookie
